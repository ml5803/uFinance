AWSTemplateFormatVersion: 2010-09-09

Parameters:
  DBUsername: 
    Type: String
    Default: ""
  DBPassword:
    Type: String
    Default: ""

Resources:
  uFinanceImageBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead

  uFinanceAPIG:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: "uFinanceAPIG"

  uFinanceAPIGDeployment:
    DependsOn: [uFinanceAPIGRegister]
    Type: 'AWS::ApiGateway::Deployment'
    Properties:
      RestApiId: !Ref uFinanceAPIG
      Description: Deploy APIG for uFinance
      StageName: test

  #WILL CHANGE INTEGRATION TYPES TO LAMBDAS ONCE WE MAKE THEM
    
  uFinanceAPIGRegisterResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt uFinanceAPIG.RootResourceId
      PathPart: register
      RestApiId: !Ref uFinanceAPIG

  uFinanceAPIGRegister:
      DependsOn: uFinanceAPIGRegisterResource
      Type: AWS::ApiGateway::Method
      Properties:
        HttpMethod: POST
        OperationName: register
        ResourceId: !Ref uFinanceAPIGRegisterResource
        RestApiId: !Ref uFinanceAPIG
        AuthorizationType: NONE
        Integration:
          Type: MOCK

  uFinanceAPIGLoginResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt uFinanceAPIG.RootResourceId
      PathPart: login
      RestApiId: !Ref uFinanceAPIG

  uFinanceAPIGLogin:
      DependsOn: uFinanceAPIGLoginResource
      Type: AWS::ApiGateway::Method
      Properties:
        HttpMethod: POST
        OperationName: register
        ResourceId: !Ref uFinanceAPIGLoginResource
        RestApiId: !Ref uFinanceAPIG
        AuthorizationType: NONE
        Integration:
          Type: MOCK

  #WILL NEED TO ADD MORE API PATHS 
  #Since we are using lambdas, not sure if want to do Lambda proxy for APIG too

  uFinanceDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: "uFinance"
      Engine: MySQL
      EngineVersion: 8.0.20
      Port: 3306
      PubliclyAccessible: True
      DBInstanceClass: db.t2.micro
      AllocatedStorage: 20
      MasterUsername:
        Ref: DBUsername
      MasterUserPassword:
        Ref: DBPassword
      
  DBSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      DBSecurityGroupIngress:
        EC2SecurityGroupName:
          Ref: WebServerSecurityGroup
      GroupDescription: Frontend Access

  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access via port 80 and SSH access
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '3306'
        ToPort: '3306'
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: 0.0.0.0/0

  #WILL NEED TO ADD LAMBDA RESOURCES AND ASSIGN HANDLERS

  #WILL ALSO NEED TO ADD ROLES/PERMISSIONS

Outputs:
  BucketName:
    Value: !Ref uFinanceImageBucket
    Description: Image bucket for uFinance
  RootAPIGId:
    Value: !GetAtt uFinanceAPIG.RootResourceId
  DBEndpoint:
    Value: !GetAtt uFinanceDB.Endpoint.Address
  DBPort:
    Value: !GetAtt uFinanceDB.Endpoint.Port